// Імпорти NPM ===========================================================
import { useParams, Link } from "react-router-dom";
import { useEffect } from "react";
import { JSX } from "react/jsx-runtime";
// =======================================================================

// Імпорти компонентів ===================================================
import { Page404 } from "../pages";
// =======================================================================

// Імпорти інтерфейсів ===================================================
import { Comic } from "../../interfaces/globalIntefaces";
// =======================================================================

// Імпорти стилів=========================================================
import "./infoComic.scss";
// =======================================================================

// Імпорти зображень =====================================================
import loadImage from "../../images/buttons/loading.gif"
// =======================================================================

// Імпорти хуків =========================================================
import { useMarvelAPI } from "../../hooks";
// =======================================================================

export default function InfoComic():JSX.Element {
    const { idComic } = useParams();

    // Використання useState, дані при зміні яких має змінюватись і сам компонент =====================
    const {componentData, getData} = useMarvelAPI<Comic>(
        {id: true, img: true, title: true, price: true, description: true, pages: true, language: true}
    );
    // ================================================================================================

    // Використання useRef (дані), дані що мають наскрізне збереження =================================
    // ================================================================================================

    // Використання useRef (елементи), посилання на елементи DOM структурі ============================
    // ================================================================================================

    // Використання useEffect, дії що потрібно виконувати: ============================================
    // При першій загрузці компонента 

    // При зміні якогось state або props
    useEffect(() => {
        getData(`https://gateway.marvel.com:443/v1/public/comics/${idComic}?apikey=6953019632a49d4f4f7a4c1138ab2248`);
    }, [idComic]);
    // При видалені компонента із сторінки

    // ================================================================================================
    // Використання useMemo, значення яке потрібно вираховувати: ======================================
    // При першій загрузці компонента 

    // При зміні якогось state або props

    // При видалені компонента із сторінки

    // ================================================================================================

    // Використання useCallback, закешовані функції що передаються в інші компоненти як props =========
    // ================================================================================================
    switch (componentData) {
        case "load":
            return (
                <div className="loadComic">
                    <img src={loadImage} alt="loading" />
                </div>
            )
        case "error":
            return (
                <Page404/>
            )
        default:
            return (
                <div className="comics">
                    <div className="image">
                        <img src={componentData[0].img} alt={componentData[0].title} />
                    </div>
                    <div className="info">
                        <h3>{componentData[0].title}</h3>
                        <p className="description">{componentData[0].description}</p>
                        <p className="pages">{componentData[0].pages} pages</p>
                        <p className="language">Language: {componentData[0].language}</p>
                        <p className="price">{componentData[0].price}$</p>
                    </div>
                    <div className="link">
                        <Link to={"/comics"}>Back to all</Link>
                    </div>
                </div>
            )   
    }
}